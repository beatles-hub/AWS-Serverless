{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Transform" : "AWS::Serverless-2016-10-31",
  "Description" : "An AWS Serverless Application to validate AccessKey using API",
  "Resources" : {
     "IAMLambdaExecutionRole": {
					"Type": "AWS::IAM::Role",
					"Properties": {
						"AssumeRolePolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [{
								"Effect": "Allow",
								"Principal": {
									"Service": ["lambda.amazonaws.com"]
								},
								"Action": ["sts:AssumeRole"]
							}]
						},
						"Path": "/"
					}
				},
	 "IAMLambdaExecutionPolicy": {
					"DependsOn": ["IAMLambdaExecutionRole"],					
					"Type": "AWS::IAM::Policy",
					"Properties": {
						"PolicyName": "IAMLambdaExecutionPolicyDocument",
						"Roles": [{
							"Ref": "IAMLambdaExecutionRole"
						}],
						"PolicyDocument": {
							"Version": "2012-10-17",
													"Statement": [														
														{
															"Sid": "CloudwatchLogGroupAccess",
															"Action": [
																"logs:CreateLogGroup",
																"logs:CreateLogStream",
																"logs:PutLogEvents"
															],
															"Effect": "Allow",
															"Resource": "*"
														},
														{
															"Sid": "IAMPermissions",
															"Action": [
																"iam:ListAccessKeys",
																"iam:GetAccessKeyLastUsed",
																"iam:ListUsers"
															],
															"Effect": "Allow",
															"Resource": "*"
														}
													]
						}
					}
				},	  
	 "ValidateAWSAccessKey" : {
      "Type" : "AWS::Serverless::Function",
	  "DependsOn": ["IAMLambdaExecutionRole"],
				"Properties": {
					"Handler": "AccessKeyValidator::AccessKeyValidator.StartupProgram::ValidateAccessKey",
					"Runtime": "dotnetcore2.0",
					"CodeUri": "",
					"MemorySize": 1024,
									"FunctionName": {
										"Fn::Sub": "${AWS::StackName}_ValidateAWSAccessKey"
									},
					"Description": "This lambda function will generate a validate an input access key against an AWS Account",
					"Timeout": 300,
					"Role": {
						"Fn::GetAtt": [ "IAMLambdaExecutionRole", "Arn" ]
					},
					"Tags": {
						"Project": "Access Key Validator",
						"CreatedBy": "turja chaudhuri"
					},
					"Events": {
						"PutResource": {
							"Type": "Api",
							"Properties": {
								"Path": "/ValidateAccessKey",
								"Method": "POST"
							}
						}
					}
				}
    }
  }
}